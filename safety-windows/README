== Finding an alpha safe path in a DAG ==

First implementation, the DAG is (for now) given as adjacency list.

An alpha safe path is an s--t path which contains all edges which are part of
> [alpha * (amount of paths)] paths. For alpha >= 0.5, this is well defined.
The DAG corresponds to all optimal alignments, and p path in this DAG
corresponds to one specific choice of optimal alignment. The edges correspond
to the matching of two symbols.

== Safety windows of the DAG ==

A safety window of a DAG is a subpath of it, for which the occurence rates
of the edges multiply up to a given value > alpha. For each starting vertex,
we return the largest such safety window, i.e. the longest path.
As written above, all safety windows are contained in a single s--t path of the
DAG, called alpha safe path, if alpha is chosen >= 50%.

== How to run ==

Compile with cmake or g++ (at least c++17), and import the GMP library.
Run "./main -h" for help, clusterfile documentation: https://www.uniprot.org/help/fasta-headers
GMP library: https://gmplib.org

== Output ==
0 S // S is the reference sequence, which is the first sequence in the cluster file
K   // K is the number of sequences in the cluster
// For each K - 1 sequences in the cluster file other than 0:
i T M // i is the current sequence index, T is the current sequence string, M is the number of safety windows
// M lines
Li Ri L'i R'i // Li and Ri is the safety window corresponding to the reference sequence, L'i and R'i is the safety window corresponding to T
