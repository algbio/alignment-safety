== Finding an alpha safe path in a DAG ==

First implementation, the DAG is (for now) given as adjacency list.

An alpha safe path is an s--t path which contains all edges which are part of
> [alpha * (amount of paths)] paths. For alpha >= 0.5, this is well defined.
The DAG corresponds to all optimal alignments, and p path in this DAG
corresponds to one specific choice of optimal alignment. The edges correspond
to the matching of two symbols.

== Safety windows of the DAG ==

A safety window of a DAG is a subpath of it, for which the occurence rates
of the edges multiply up to a given value > alpha. For each starting vertex,
we return the largest such safety window, i.e. the longest path.
As written above, all safety windows are contained in a single s--t path of the
DAG, called alpha safe path, if alpha is chosen >= 50%.

== How to run ==

For now, main does not take any arguments. Compile for example with
"g++ -std=c++17 -stdlib=libc++ ./alpha_safe_paths.cc -o alpha_safe_paths\
  ./safety_windows.cc -o safety_windwos ./main.cc -o main"
